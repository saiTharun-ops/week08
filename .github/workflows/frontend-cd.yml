name: CD - Deploy Frontend to AKS

on:
  workflow_dispatch:   # make sure this exists so it shows up in Actions
    inputs:
      product_api_ip: {required: true, default: 'http://<ip>:8000'}
      order_api_ip:   {required: true, default: 'http://<ip>:8001'}
      aks_cluster_name:   {required: true, default: '<aks_name>'}
      aks_resource_group: {required: true, default: '<rg_name>'}

jobs:
  deploy_frontend:
    runs-on: ubuntu-latest
    environment: Production
    env:
      ACR_NAME:         ${{ secrets.ACR_NAME }}
      ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
      ACR_USERNAME:     ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD:     ${{ secrets.ACR_PASSWORD }}

    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Either A or B (pick one)

      # A) az acr login (needs ACR_NAME)
      - name: Login to Azure Container Registry
        run: az acr login --name "$ACR_NAME"

      # B) docker login (uses login server + user/pass)
      # - name: Docker login to ACR
      #   run: echo "$ACR_PASSWORD" | docker login "$ACR_LOGIN_SERVER" -u "$ACR_USERNAME" --password-stdin

      - name: Inject Backend IPs into Frontend main.js
        run: |
          sed -i "s|_PRODUCT_API_URL_|${{ inputs.product_api_ip }}|g" frontend/main.js
          sed -i "s|_ORDER_API_URL_|${{ inputs.order_api_ip }}|g" frontend/main.js

      - name: Build and Push Frontend Image
        run: |
          docker build -t $ACR_LOGIN_SERVER/frontend:latest ./frontend/
          docker push $ACR_LOGIN_SERVER/frontend:latest

      - name: Set Kubernetes context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ inputs.aks_resource_group }}
          cluster-name:  ${{ inputs.aks_cluster_name }}

      # Ensure the pull secret exists (works with sandbox policies)
      - name: Create/Update imagePullSecret for ACR
        run: |
          kubectl create secret docker-registry acr-auth \
            --docker-server=$ACR_LOGIN_SERVER \
            --docker-username=$ACR_USERNAME \
            --docker-password=$ACR_PASSWORD \
            --docker-email=unused@example.com \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy Frontend to AKS
        run: kubectl apply -f k8s/frontend.yaml

      - name: Logout
        if: always()
        run: az logout
